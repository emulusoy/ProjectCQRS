
@using ProjectCQRS.CQRS.Results.ProductResults
@model List<GetProductQueryResult>
@{
    Layout = null;
}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" />

<div class="container py-4">
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <div class="card shadow-sm border-0">
                <div class="card-header d-flex justify-content-between align-items-center bg-white">
                    <div class="d-flex align-items-center gap-2">
                        <span class="badge text-bg-primary rounded-pill px-3 py-2">Ürün</span>
                        <h5 class="m-0">Liste</h5>
                    </div>
                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createModal">
                        <i class="bi bi-plus-lg"></i> Yeni Ürün
                    </button>
                </div>

                <div class="card-body p-0">
                    @if (TempData["Success"] is string ok && !string.IsNullOrWhiteSpace(ok))
                    {
                        <div class="alert alert-success m-3">@ok</div>
                    }
                    @if (TempData["Error"] is string err && !string.IsNullOrWhiteSpace(err))
                    {
                        <div class="alert alert-danger m-3">@err</div>
                    }

                    <div class="table-responsive">
                        <table class="table table-hover align-middle mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th style="width:80px;">#</th>
                                    <th>Ürün Adı</th>
                                    <th class="text-end" style="width:140px;">Stok</th>
                                    <th class="text-end" style="width:180px;">Fiyat</th>
                                    <th style="width:260px;" class="text-end">İşlemler</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    var i = 1;
                                }
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>@i</td>
                                        <td class="fw-medium">@item.ProductName</td>
                                        <td class="text-end">@item.ProductStock</td>
                                        <td class="text-end">@($"{item.ProductPrice:N2} ₺")</td>
                                        <td class="text-end">
                                            <button class="btn btn-sm btn-outline-secondary me-2"
                                                    data-bs-toggle="modal"
                                                    data-bs-target="#editModal"
                                                    data-id="@item.ProductId"
                                                    data-name="@item.ProductName"
                                                    data-stock="@item.ProductStock"
                                                    data-price="@item.ProductPrice.ToString(System.Globalization.CultureInfo.InvariantCulture)">
                                                <i class="bi bi-pencil-square"></i> Güncelle
                                            </button>

                                            <button class="btn btn-sm btn-outline-danger"
                                                    data-bs-toggle="modal"
                                                    data-bs-target="#deleteModal"
                                                    data-id="@item.ProductId"
                                                    data-name="@item.ProductName">
                                                <i class="bi bi-trash3"></i> Sil
                                            </button>
                                        </td>
                                    </tr>
                                    i++;
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

                <div class="card-footer text-muted small">
                    Toplam: @Model.Count() ürün
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="createModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="CreateProduct" method="post">
                <div class="modal-header">
                    <h5 class="modal-title">Yeni Ürün Ekle</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Kapat"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Ürün Adı</label>
                        <input name="ProductName" class="form-control" required minlength="2" maxlength="150" placeholder="Örn: Kulaklık" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Stok</label>
                        <input name="ProductStock" type="number" class="form-control" required min="0" step="1" placeholder="Örn: 100" />
                    </div>
                    <div class="mb-1">
                        <label class="form-label">Fiyat</label>
                        <input name="ProductPrice" type="number" class="form-control" required min="0" step="0.01" placeholder="Örn: 199.90" />
                        <div class="form-text">Ondalık için nokta kullanın (ör. 199.90)</div>
                    </div>
                    @Html.AntiForgeryToken()
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-light" data-bs-dismiss="modal">Vazgeç</button>
                    <button type="submit" class="btn btn-primary">Ekle</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="editModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="UpdateProduct" method="post">
                <div class="modal-header">
                    <h5 class="modal-title">Ürünü Güncelle</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Kapat"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="ProductId" id="edit-id" />
                    <div class="mb-3">
                        <label class="form-label">Ürün Adı</label>
                        <input name="ProductName" id="edit-name" class="form-control" required minlength="2" maxlength="150" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Stok</label>
                        <input name="ProductStock" id="edit-stock" type="number" class="form-control" required min="0" step="1" />
                    </div>
                    <div class="mb-1">
                        <label class="form-label">Fiyat</label>
                        <input name="ProductPrice" id="edit-price" type="number" class="form-control" required min="0" step="0.01" />
                        <div class="form-text">Ondalık için nokta kullanın (ör. 199.90)</div>
                    </div>
                    @Html.AntiForgeryToken()
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-light" data-bs-dismiss="modal">Vazgeç</button>
                    <button type="submit" class="btn btn-secondary">Güncelle</button>
                </div>
            </form>
        </div>
    </div>
</div>
<div class="modal fade" id="deleteModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="DeleteProduct" method="post">
                <div class="modal-header">
                    <h5 class="modal-title">Ürünü Sil</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Kapat"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="ProductId" id="delete-id" />
                    <p class="mb-0">"<strong id="delete-name"></strong>" ürününü silmek istediğinize emin misiniz?</p>
                    @Html.AntiForgeryToken()
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-light" data-bs-dismiss="modal">Vazgeç</button>
                    <button type="submit" class="btn btn-danger">Sil</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
    document.addEventListener('DOMContentLoaded', function () {
        const editModal = document.getElementById('editModal');
        if (editModal) {
            editModal.addEventListener('show.bs.modal', function (event) {
                const btn = event.relatedTarget;
                const id = btn.getAttribute('data-id');
                const name = btn.getAttribute('data-name');
                const stock = btn.getAttribute('data-stock');
                const price = btn.getAttribute('data-price'); 

                document.getElementById('edit-id').value = productId;
                document.getElementById('edit-name').value = productName;
                document.getElementById('edit-stock').value = productStock;
                document.getElementById('edit-price').value = productPrice;
            });
        }

        const deleteModal = document.getElementById('deleteModal');
        if (deleteModal) {
            deleteModal.addEventListener('show.bs.modal', function (event) {
                const btn = event.relatedTarget;
                const id = btn.getAttribute('data-id');
                const name = btn.getAttribute('data-name');

                document.getElementById('delete-id').value = productId;
                document.getElementById('delete-name').innerText = productName;
            });
        }
    });
</script>
